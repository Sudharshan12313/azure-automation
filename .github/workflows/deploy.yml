name: Terraform Outputs + Ansible Provision

on:
  workflow_dispatch:

jobs:
  provision-and-ansible:
    name: "Run Ansible on Self-hosted Runner"
    runs-on: [self-hosted, ansible]

    env:
      SSH_KEY_PATH: ~/.ssh/id_rsa
      LINUX_USER: azureuser
      WIN_USER: azureuser
      WIN_PASS: ${{ secrets.WIN_PASS }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Verify Ansible & Python
      run: |
        ansible --version
        python3 --version

    - name: Fetch Latest Applied Terraform Outputs
      env:
        TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
        TFC_WORKSPACE_ID: ${{ secrets.TFC_WORKSPACE_ID }}
      run: |
        echo "Fetching latest applied state version..."
        AUTH_HEADER="Authorization: Bearer $TFC_TOKEN"
        
        # Fetch all runs, filter to last successful apply
        RUNS_URL="https://app.terraform.io/api/v2/workspaces/$TFC_WORKSPACE_ID/runs"
        STATE_ID=$(curl -s -H "$AUTH_HEADER" "$RUNS_URL" | \
          jq -r '.data[] | select(.attributes.status == "applied") | .relationships["state-versions"].data.id' | head -n1)

        if [[ -z "$STATE_ID" ]]; then
          echo "No applied state found. Exiting..."
          exit 1
        fi

        echo "Found state version ID: $STATE_ID"
        
        OUTPUT_URL="https://app.terraform.io/api/v2/state-versions/$STATE_ID/output-values"
        echo "Fetching outputs from $OUTPUT_URL"
        
        curl -s -H "$AUTH_HEADER" "$OUTPUT_URL" -o ansible/terraform_output.json
        
        if [[ $? -eq 0 ]]; then
          echo "Outputs written to ansible/terraform_output.json"
        else
          echo "Failed to fetch output values."
          exit 1
        fi

    - name: Generate Dynamic Inventory
      working-directory: ansible
      run: |
        chmod +x generate_inventory.py
        python3 generate_inventory.py 

    - name: Run Linux Playbook
      working-directory: ansible
      run: |
        ansible-playbook -i Inventory.ini linux_playbook.yml 

    - name: Run Windows Playbook
      working-directory: ansible
      run: |
        ansible-playbook -i Inventory.ini win_playbook.yml
